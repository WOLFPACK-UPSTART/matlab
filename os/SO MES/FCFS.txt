#include <stdio.h>
struct Process {
    int id;
    int at, bt, wt, tat;
};
void sortByArrivalTime(struct Process p[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (p[j].at > p[j + 1].at) {
                struct Process temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
        }
    }
}
int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    struct Process p[n];
    for (int i = 0; i < n; i++) {
        p[i].id = i + 1;
        printf("Enter burst time for process %d: ", i + 1);
        scanf("%d", &p[i].bt);
        printf("Enter arrival time for process %d: ", i + 1);
        scanf("%d",&p[i].at);
    }
    sortByArrivalTime(p, n);
    int curr_time = 0;
    float twt = 0, ttt = 0;
    printf("\nFCFS(First Come First Serve) CPU Scheduling:\n");
    printf("Process\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        if (curr_time < p[i].at) curr_time = p[i].at;
        p[i].wt = curr_time - p[i].at;
        curr_time += p[i].bt;
        p[i].tat = p[i].wt + p[i].bt;
        twt += p[i].wt;
        ttt += p[i].tat;
        printf("%d\t\t%d\t\t\t\t%d\t\t\t\t%d\t\t\t\t%d\n", p[i].id, p[i].at, p[i].bt, p[i].wt, p[i].tat);
    }
    printf("\nAverage Waiting Time: %.2f", twt / n);
    printf("\nAverage Turnaround Time: %.2f", ttt / n);
    return 0;
}